name: ci_cd_pipeline
on: 
    workflow_dispatch:
        inputs:
            mule-env:
                description: Mulesoft environment to deploy
                required: true
                default: 'sandbox'
jobs:
    sandbox:
        if: github.event.inputs.mule-env == 'sandbox'
        environment: sandbox
        env: 
            CLOUDHUB_ENVIRONMENT: "Sandbox" 
            CLOUDHUB_WORKERS: "1"
            CLOUDHUB_WORKER_TYPE: "MICRO"
            CLOUDHUB_REGION: "us-east-2"
            CLOUDHUB_ID: ${{ secrets.CLOUDHUB_ID }}
            CLOUDHUB_SECRET: ${{ secrets.CLOUDHUB_SECRET }}
        permissions:
            packages: write
            contents: write
        runs-on: ubuntu-latest
        steps:
              # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
            - name: Get the code
              uses: actions/checkout@v4

            # Set version variable
            - name: Set Version
              id: set-version
              run: echo version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_OUTPUT     
            
              # Print version variable
            - name: Print Version
              run: echo "Version ${{ steps.set-version.outputs.version }}"

            # Set up Java
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                distribution: 'adopt-hotspot'
                java-version: '8'
                cache: 'maven'
                server-id: central
                server-username: JF_USERNAME
                server-password: JF_PASSWORD

            # Run the tests
            - name: Test the compiled source code
              run: mvn clean test

            # Package
            - name: Build the jar
              run: mvn package -DskipTests   

            # Deploy
            - name: Deploy             
              run: |
                mvn -U -V -e -B -DskipTests deploy --file pom.xml -DmuleDeploy \
                -Dconn.app.client.id=${{ env.CLOUDHUB_ID}} \
                -Dconn.app.client.secret=${{ env.CLOUDHUB_SECRET}} \
                -Dcloudhub.environment=${{ env.CLOUDHUB_ENVIRONMENT}} \
                -Dcloudhub.workerType=${{ env.CLOUDHUB_WORKER_TYPE}} \
                -Dcloudhub.workers=${{ env.CLOUDHUB_WORKERS}} \
                -Dcloudhub.region=${{ env.CLOUDHUB_REGION}} \

            # Configure user for the next step
            - name: Configure Git user
              run: |
                git config user.email "actions@github.com"
                git config user.name "GitHub Actions"

            # Replace the snapshot version with a release candidate version.
            # Deploy the jar to GitHub registry
            # Build next snapshot version.
            - name: Prepare release
              continue-on-error: true
              run: mvn -B release:prepare
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish package
              run: mvn --batch-mode deploy
              env:
                JF_USERNAME: ${{ secrets.JF_USERNAME }}
                JF_PASSWORD: ${{ secrets.JF_PASSWORD }}         

            # Replace the snapshot version with a release candidate version.
            # Deploy the jar to GitHub registry
            # Build next snapshot version.
            - name: Perform release
              continue-on-error: true
              run: mvn -B release:perform
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}