name: ci_cd_pipeline
on: 
    workflow_dispatch:
        inputs:
            mule-env:
                description: Mulesoft environment to deploy
                required: true
                default: 'sandbox'
jobs:
    sandbox:
        if: github.event.inputs.mule-env == 'sandbox'
        environment: sandbox
        env: 
            CLOUDHUB_ENVIRONMENT: "Sandbox" 
            CLOUDHUB_WORKERS: "1"
            CLOUDHUB_WORKER_TYPE: "MICRO"
            CLOUDHUB_REGION: "us-east-2"
            CLOUDHUB_ID: ${{ secrets.CLOUDHUB_ID }}
            CLOUDHUB_SECRET: ${{ secrets.CLOUDHUB_SECRET }}
        runs-on: ubuntu-latest
        steps:
            # Information about the workflow run (context).
            - name: Get GitHub object
              env:
                GITHUB_CONTEXT: ${{ toJSON(github) }}
              run: echo "$GITHUB_CONTEXT"
            # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
            - name: Get the code
              uses: actions/checkout@v4
            # Set version variable
            - name: Set Version
              id: set-version
              run: echo version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT     
            # Print version variable
            - name: Print Version
              run: echo "Version ${{ steps.set-version.outputs.version }}"
            # Set up Java
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                distribution: 'adopt-hotspot'
                java-version: '8'
                cache: 'maven'
            # Run the tests
            - name: Test the compiled source code
              run: mvn clean test
            # Package
            - name: Build the jar
              run: mvn package -DskipTests
            # Deploy
            - name: Deploy             
              run: |
                mvn -U -V -e -B -DskipTests deploy --file pom.xml -DmuleDeploy \
                -Dconn.app.client.id=${{ env.CLOUDHUB_ID}} \
                -Dconn.app.client.secret=${{ env.CLOUDHUB_SECRET}} \
                -Dcloudhub.environment=${{ env.CLOUDHUB_ENVIRONMENT}} \
                -Dcloudhub.workerType=${{ env.CLOUDHUB_WORKER_TYPE}} \
                -Dcloudhub.workers=${{ env.CLOUDHUB_WORKERS}} \
                -Dcloudhub.region=${{ env.CLOUDHUB_REGION}} \
            - name: prepare release and perform
              continue-on-error: true
              run: mvn -B release:prepare release:perform
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}