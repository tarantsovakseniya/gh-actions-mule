name: ci_cd_reusable_workflow
on: 
    workflow_call:
        inputs:
            CLOUDHUB_ENVIRONMENT:
                description: Environment name to deploy api to CH
                required: true
                type: string
            GITHUB_ENVIRONMENT:
                description: Environment name to fetch the secrets from GitHub
                required: true
                type: string                    
            CLOUDHUB_WORKERS:
                description: Number of dedicated instances
                required: false
                default: '1'
                type: string
            CLOUDHUB_WORKER_TYPE:
                description: Size of the worker
                required: false
                default: 'MICRO'
                type: string                
            CLOUDHUB_REGION:
                description: Region of worker clouds
                required: true
                type: string                                   
        secrets:
            CLOUDHUB_ID:
                description: Connected App ID
                required: true  
            CLOUDHUB_SECRET:
                description: Connected App Secret
                required: true

jobs:
    build:
        environment: ${{ inputs.GITHUB_ENVIRONMENT }}
        runs-on: ubuntu-latest
        steps:
            # Information about the workflow run (context).
            - name: Get GitHub object
              env:
                GITHUB_CONTEXT: ${{ toJSON(github) }}
              run: echo "$GITHUB_CONTEXT"
            # This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.
            - name: Get the code
              uses: actions/checkout@v4
            # Set version variable
            - name: Set Version
              id: set-version
              run: echo version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> $GITHUB_OUTPUT     
            # Print version variable
            - name: Print Version
              run: echo "Version ${{ steps.set-version.outputs.version }}"
            # Set up Java
            - name: Set up JDK 8
              uses: actions/setup-java@v4
              with:
                distribution: 'adopt-hotspot'
                java-version: '8'
                cache: 'maven'
            # Run the tests
            - name: Test the compiled source code
              run: mvn clean test
            # Package
            - name: Build the jar
              run: mvn package -DskipTests
            # Deploy
            - name: Deploy             
              run: |
                mvn -U -V -e -B -DskipTests deploy --file pom.xml -DmuleDeploy \
                -Dconn.app.client.id=${{ secrets.CLOUDHUB_ID}} \
                -Dconn.app.client.secret=${{ secrets.CLOUDHUB_SECRET}} \
                -Dcloudhub.environment=${{ inputs.CLOUDHUB_ENVIRONMENT}} \
                -Dcloudhub.workerType=${{ inputs.CLOUDHUB_WORKER_TYPE}} \
                -Dcloudhub.workers=${{ inputs.CLOUDHUB_WORKERS}} \
                -Dcloudhub.region=${{ inputs.CLOUDHUB_REGION}} \